version: '3.4'

x-env: &env
  POSTGRES_USER:
  POSTGRES_PASSWORD:
  POSTGRES_DB:
  RACK_ENV:
  REDIS_URL:

x-logging: &logging
  logging:
    driver: gelf
    options:
      gelf-address: 'udp://localhost:12201'
      tag: '{{.Name}}'

x-base-service: &base-service
  << : *logging
  command: bundle exec ruby service.rb
  links:
    - db
    - redis
  ports:
    - 80
  stdin_open: true
  tty: true

x-base-subscriber: &base-subscriber
  << : *logging
  command: bundle exec ruby subscriber.rb
  links:
    - db
    - redis
  environment:
    << : *env
  stdin_open: true
  tty: true

services:
  users-service:
    << : *base-service
    build: ../users-service
    volumes:
      - ../users-service/:/app
    environment:
      << : *env
      VIRTUAL_HOST: "*/users*"
      VIRTUAL_HOST_WEIGHT: 101

  house-service:
    << : *base-service
    build: ../house-service
    volumes:
      - ../house-service/:/app
    environment:
      << : *env
      VIRTUAL_HOST: "*/houses*"
      VIRTUAL_HOST_WEIGHT: 102

  device-service:
    << : *base-service
    build: ../device-service
    volumes:
      - ../device-service/:/app
    environment:
      << : *env
      VIRTUAL_HOST: "*/devices*,*/*/devices*"
      VIRTUAL_HOST_WEIGHT: 103

  device-subscriber:
    << : *base-subscriber
    build: ../device-service
    volumes:
      - ../device-service/:/app

  trigger-service:
    << : *base-service
    build: ../trigger-service
    volumes:
      - ../trigger-service/:/app
    environment:
      << : *env
      VIRTUAL_HOST: "*/triggers*,*/*/triggers*"
      VIRTUAL_HOST_WEIGHT: 104

  trigger-subscriber:
    << : *base-subscriber
    build: ../trigger-service
    volumes:
      - ../trigger-service/:/app

  action-service:
    << : *base-service
    build: ../action-service
    volumes:
      - ../action-service/:/app
    environment:
      << : *env
      VIRTUAL_HOST: "*/actions*,*/*/actions*"
      VIRTUAL_HOST_WEIGHT: 105

  action-subscriber:
    << : *base-subscriber
    build: ../action-service
    volumes:
      - ../action-service/:/app

  bark-service:
    << : *base-service
    build: ../bark-service
    volumes:
      - ../bark-service/:/app
    environment:
      << : *env
      VIRTUAL_HOST: "*/barks*,*/*/barks*"
      VIRTUAL_HOST_WEIGHT: 106

  bark-subscriber:
    << : *base-subscriber
    build: ../bark-service
    volumes:
      - ../bark-service/:/app

  ui:
    << : *logging
    build: ../bark-ui
    command: npm run dev
    volumes:
      - ../bark-ui/:/app
    ports:
      - 80
    environment:
      VIRTUAL_HOST: "*/*"
    stdin_open: true
    tty: true

  trigger-instance-service:
    << : *logging
    build: ../trigger-instance-service
    command: sh -c "go build && ./app"
    ports:
      - 80
    links:
      - db
      - redis
    volumes:
      - ../trigger-instance-service:/go/src/app
    environment:
      << : *env
      VIRTUAL_HOST: "/trigger-instances*"
      VIRTUAL_HOST_WEIGHT: 107
    stdin_open: true
    tty: true

  lb:
    image: dockercloud/haproxy
    links:
      - users-service
      - house-service
      - device-service
      - trigger-service
      - action-service
      - bark-service
      - trigger-instance-service
      - ui
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 80:80

  db:
    image: postgres:latest
    volumes:
      - /var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER:
      POSTGRES_PASSWORD:
      POSTGRES_DB:

  redis:
    image: redis:4.0.5

  logstash:
    build: docker/logstash/
    command: logstash -f /etc/logstash/conf.d/logstash.conf
    ports:
      - "12201:12201/udp"

  elasticsearch:
    image: elasticsearch:latest
    command: elasticsearch -Enetwork.host=0.0.0.0
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xms750m -Xmx750m"
    # volumes:
    #   - /usr/share/elasticsearch/data

  kibana:
    build: docker/kibana/
    ports:
      - "5601:5601"